{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name tetris.game, :imports nil, :requires {r reagent.core, reagent.core reagent.core}, :uses nil, :defs {pieces {:name tetris.game/pieces, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 20, :column 1, :end-line 20, :end-column 12, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 20, :column 6, :end-line 20, :end-column 12}, :doc "Vektor med matriser som representerer hver enkelt tetrimino. Henholdvis I, O, Z, L, T"}, valid-world? {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 60, :column 7, :end-line 60, :end-column 19, :arglists (quote ([{:keys [x y piece block-pile done]}]))}, :name tetris.game/valid-world?, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 19, :method-params ([p__46969]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [x y piece block-pile done]}]))}, step {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 122, :column 7, :end-line 122, :end-column 11, :arglists (quote ([world f]))}, :name tetris.game/step, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 11, :method-params ([world f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([world f]))}, tick {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 117, :column 7, :end-line 117, :end-column 11, :arglists (quote ([]))}, :name tetris.game/tick, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, collect-rows {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 91, :column 7, :end-line 91, :end-column 19, :arglists (quote ([world]))}, :name tetris.game/collect-rows, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 19, :method-params ([world]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([world]))}, landed {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 104, :column 7, :end-line 104, :end-column 13, :arglists (quote ([world]))}, :name tetris.game/landed, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 13, :method-params ([world]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([world]))}, handle-event {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 133, :column 7, :end-line 133, :end-column 19, :arglists (quote ([e]))}, :name tetris.game/handle-event, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 19, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, flip {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 39, :column 7, :end-line 39, :end-column 11, :arglists (quote ([matrix]))}, :name tetris.game/flip, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 11, :method-params ([matrix]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([matrix]))}, transpose {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 42, :column 7, :end-line 42, :end-column 16, :arglists (quote ([matrix]))}, :name tetris.game/transpose, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 16, :method-params ([matrix]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([matrix]))}, make-empty-board {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 46, :column 7, :end-line 46, :end-column 23, :arglists (quote ([x y]))}, :name tetris.game/make-empty-board, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 23, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, collect-piece {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 70, :column 7, :end-line 70, :end-column 20, :arglists (quote ([block-pile [x y color]]))}, :name tetris.game/collect-piece, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 20, :method-params ([block-pile p__46990]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([block-pile [x y color]]))}, colors {:name tetris.game/colors, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 5, :column 1, :end-line 5, :end-column 12, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 5, :column 6, :end-line 5, :end-column 12}}, new-piece {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 83, :column 7, :end-line 83, :end-column 16, :arglists (quote ([{:keys [piece x y], :as world}]))}, :name tetris.game/new-piece, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 16, :method-params ([p__47018]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [piece x y], :as world}]))}, attach-piece {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 73, :column 7, :end-line 73, :end-column 19, :arglists (quote ([{:as world, :keys [piece color x y block-pile]}]))}, :name tetris.game/attach-piece, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 19, :method-params ([p__46997]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:as world, :keys [piece color x y block-pile]}]))}, gravity {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 111, :column 7, :end-line 111, :end-column 14, :arglists (quote ([world]))}, :name tetris.game/gravity, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 14, :method-params ([world]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([world]))}, app-state {:name tetris.game/app-state, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 49, :column 1, :end-line 49, :end-column 15, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 49, :column 6, :end-line 49, :end-column 15}, :doc "inital state"}, finished? {:protocol-inline nil, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 99, :column 7, :end-line 99, :end-column 16, :arglists (quote ([world]))}, :name tetris.game/finished?, :variadic false, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :end-column 16, :method-params ([world]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([world]))}, action {:name tetris.game/action, :file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 128, :column 1, :end-line 128, :end-column 12, :meta {:file "/home/joakim/Workspace/clojure/tetris/src/tetris/game.cljs", :line 128, :column 6, :end-line 128, :end-column 12}}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y :done :color :piece :done? :score :x :block-pile :pause?}, :order [:piece :x :y :block-pile :pause? :done? :color :score :done]}, :doc nil}